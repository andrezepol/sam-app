name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature**'
  delete:
    branches:
      - 'feature**'

env:
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: sam-app-dev
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::730335186232:role/aws-sam-cli-managed-dev-pipel-PipelineExecutionRole-egTm9N5T76n3
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::730335186232:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionRo-u8AiT3S5WfFs
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-dev-pipeline-r-artifactsbucket-rtpbzrdtxy6f
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${TESTING_IMAGE_REPOSITORY}" to
  # testing "sam package" and "sam deploy" commands.
  # TESTING_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  #TESTING_REGION: us-east-1
  #PROD_STACK_NAME: sam-app-pdn
  #PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::730335186232:role/aws-sam-cli-managed-pdn-pipel-PipelineExecutionRole-DSZpyOraBKAH
  #PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::730335186232:role/aws-sam-cli-managed-pdn-p-CloudFormationExecutionRo-H1KiWqQmx96e
  #PROD_ARTIFACTS_BUCKET: aws-sam-cli-managed-pdn-pipeline-r-artifactsbucket-xvm6g6oyjwmb
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${PROD_IMAGE_REPOSITORY}" to
  # prod "sam package" and "sam deploy" commands.
  # PROD_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  #PROD_REGION: us-east-1

permissions:
  id-token: write
  contents: read
jobs:
  checkout:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the tests here

  build-and-package:
    if: github.ref == 'refs/heads/main'
    needs: [checkout]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Upload artifacts to testing artifact buckets
        run: |
          sam package \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --region ${TESTING_REGION} \
            --output-template-file packaged-testing.yaml

      - uses: actions/upload-artifact@v4
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml

  deploy-testing:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: actions/download-artifact@v4
        with:
          name: packaged-testing.yaml

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to testing account
        run: |
          sam deploy --stack-name ${TESTING_STACK_NAME} \
            --template packaged-testing.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}

  unit-test:
    if: github.ref == 'refs/heads/main'
    needs: [deploy-testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
        working-directory: unit-test/jest-test
      - run: npm run build --if-present
        working-directory: unit-test/jest-test
      - run: npm run test:unit
        working-directory: unit-test/jest-test

  aceptance-test:
    if: github.ref == 'refs/heads/main'
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
        working-directory: aceptance-test/jest-test
      - run: npm run build --if-present
        working-directory: aceptance-test/jest-test
      - run: npm run test:aceptace
        working-directory: aceptance-test/jest-test

  
